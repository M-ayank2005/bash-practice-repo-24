#!/usr/bin/env bash

# Issue: Implement Password Generation Functions
# Description:
# Create a function that generates passwords, The password should consist of uppercase letters, lowercase letters, numbers, and special characters. The function should take in a single argument, which is the length of the password to generate. The function should return the generated password.

# Here is the required bash script genrating random password

#!/usr/bin/env bash

# Function to generate a random password
generate_password() {
    local length="$1"
    local password=""

    # Define character sets
    local upper='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    local lower='abcdefghijklmnopqrstuvwxyz'
    local numbers='0123456789'
    local special='!@#$%^&*()-=_+[]{}|;:,.<>?'

    # Combine character sets
    local all="$upper$lower$numbers$special"

    # Get random characters from the combined set
    for ((i = 0; i < length; i++)); do
        password="$password${all:RANDOM % ${#all}:1}"
    done

    echo "$password"
}

# Usage example
length="$1"  # Length of the password provided as an argument
generated_password=$(generate_password "$length")
echo "Generated password: $generated_password"
